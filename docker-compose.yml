version: "3.7"

x-defaults: &defaults
  restart: unless-stopped
  build: .
  environment:
    # SENTRY_MEMCACHED_HOST: ${SENTRY_MEMCACHED_HOST}
    - SENTRY_EMAIL_HOST=${SENTRY_EMAIL_HOST}
    - SENTRY_SECRET_KEY=${SENTRY_SECRET_KEY}
    - SENTRY_POSTGRES_HOST=${SENTRY_POSTGRES_HOST}
    - SENTRY_POSTGRES_PORT=${SENTRY_POSTGRES_PORT}
    - SENTRY_DB_NAME=${SENTRY_DB_NAME}
    - SENTRY_DB_USER=${SENTRY_DB_USER}
    - SENTRY_REDIS_HOST=${SENTRY_REDIS_HOST}
    - SENTRY_REDIS_PORT=${SENTRY_REDIS_PORT}
    - SENTRY_DB_PASSWORD=${SENTRY_DB_PASSWORD}
    - SENTRY_EMAIL_BACKEND=${SENTRY_EMAIL_BACKEND}
    - SENTRY_EMAIL_PASSWORD=${SENTRY_EMAIL_PASSWORD}
    - SENTRY_EMAIL_USER=${SENTRY_EMAIL_USER}
    - SENTRY_EMAIL_PORT=${SENTRY_EMAIL_PORT}
    - SENTRY_EMAIL_USE_TLS=${SENTRY_EMAIL_USE_TLS}
    - SENTRY_ADMIN_EMAIL=${SENTRY_ADMIN_EMAIL}
    - SENTRY_SERVER_EMAIL=${SENTRY_SERVER_EMAIL}
    - SENTRY_URL_PREFIX=${SENTRY_URL_PREFIX}
    - SENTRY_ADMIN_USERNAME=${SENTRY_ADMIN_USERNAME}
    - SENTRY_ADMIN_PASSWORD=${SENTRY_ADMIN_PASSWORD}
  volumes:
    - sentry-data:/var/lib/sentry/files
    networks:
      - sentry
      - proxy

services:
  sentry-redis:
    image: redis:latest
    container_name: sentry-redis
    hostname: sentry-redis
    restart: always
    networks:
      - sentry
    labels:
      - traefik.enable=false
  
  sentry-postgres:
    <<: *defaults
    image: postgres:latest
    container_name: sentry-postgres
    hostname: sentry-postgres
    networks:
      - sentry
    environment:
      POSTGRES_USER: ${SENTRY_DB_USER}
      POSTGRES_PASSWORD: ${SENTRY_DB_PASSWORD}
      POSTGRES_DB: ${SENTRY_DB_NAME}
    volumes:
      - sentry-postgres:/var/lib/postgresql/data
    labels:
      - traefik.enable=false

  sentry-web:
    <<: *defaults
    image: sentry:latest
    container_name: sentry-web
    hostname: sentry-web
    command: start
    expose:
      - 9000
    depends_on:
      - sentry-redis
      - sentry-postgres
    labels:
      - traefik.http.services.sentry.loadbalancer.server.port=9000
      - traefik.http.routers.sentry.rule=Host("sentry.${DOMAIN}")
      - traefik.http.routers.sentry.entrypoints=https
      - traefik.http.routers.sentry.tls=true
      - traefik.http.routers.sentry.tls.certresolver=${CERT_RESOLVER}
      - traefik.docker.network=proxy

  sentry-cron:
    <<: *defaults
    image: sentry:latest
    container_name: sentry-cron
    hostname: sentry-cron
    depends_on:
      - sentry-postgres
      - sentry-redis
    command: sentry run cron
    labels:
      - traefik.enable=false

  sentry-worker:
    <<: *defaults
    image: sentry:latest
    container_name: sentry-worker
    hostname: sentry-worker
    depends_on:
      - sentry-web
      - sentry-postgres
      - sentry-redis
    command: sentry run worker
    labels:
      - traefik.enable=false

volumes:
  sentry-postgres:
  sentry-data:

networks:
  proxy:
    external: true
  sentry:
